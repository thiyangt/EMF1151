---
title: "Key Skills in <br/> Statistics, <br/> Data Science, <br/> and Statistical Programming  <br/> for Resource Managers"
subtitle: "(Conducted under EMF 115 1.0 Key Skills for Resource Managers)"
author: "Dr. Thiyanga S. Talagala "
format:
  revealjs:
    css:
        - "custom.css"
    width: 1600
    height: 900
    margin: 0.1
    theme: simple
    transition: slide
    background-transition: fade
    slide-number: true
    show-slide-number: all
    title-slide-attributes: 
      data-background-color: "#016450"
      data-background-image: none
---

# Recap

- Why Statistics is needed for managers

- Statistician/ Data Scientist: What they do and How they work


- Primary Data vs Secondary Data


- Primary Data Collection Methods

- Some tools for data analysis

# Data Visualisation

---

```{r, echo=TRUE}
library(palmerpenguins)
data("penguins")
library(dplyr)
penguins <- penguins |>
  select(1, 2, 5, 6)
as.data.frame(penguins) |> knitr::kable()
```
---

## Step 1: Identify qualitative and quantitative variables

```{r}
as.data.frame(penguins) |> knitr::kable()

```

---

# Step 2: Qualitative Data Analysis: Univariate Analysis

---

### Composition of the sample by species

```{r, echo=TRUE}
library(ggplot2)
ggplot(penguins, aes(x=species)) + geom_bar()
```

---

### Composition of the sample by species

```{r, echo=TRUE}
library(ggplot2)
p1 <- ggplot(penguins, aes(x=species, fill=species)) + geom_bar()
p1
```

---

### Selecting colours

Go to [https://colorbrewer2.org/](https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3)

Sri Lanka Nature Inspired Colour Palettes [https://github.com/thiyangt/nic](https://github.com/thiyangt/nic)

---
## Pie chart

```{r}
#| warning: false
#| message: false
## Pie chart
library(magrittr)
library(tidyverse)
# Remove rows with missing species data
pf <- penguins %>%
  drop_na(species)

# Create the frequency table with counts and percentages
frequency_table <- pf %>%
  count(species) %>%
  mutate(percentage = n / sum(n) * 100)

# Plot pie chart
pie_chart <- ggplot(frequency_table, aes(x = "", y = n, fill = species)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y", start=0) +
  labs(title = "Composition of the Sample by Species") +
  theme_void() +
  theme(legend.position = "bottom")
pie_chart
```



# Which is the best?

##

:::: {.columns}
::: {.column width="50%"}
```{r}
p1
```
:::

::: {.column width="50%"}
```{r}
pie_chart
```
:::
::::



# Step 3: Qualitative Data Analysis: Bivariate Analysis


#
  
```{r, echo=TRUE}
library(ggplot2)
ggplot(penguins, aes(x=species, fill=island)) + geom_bar() 
```


#
  
```{r, echo=TRUE}
library(ggplot2)
ggplot(penguins, aes(x=species, fill=island)) + geom_bar()  + scale_fill_brewer(palette="Set2")
```


#
  
```{r, echo=TRUE}
library(ggplot2)
ggplot(penguins, aes(x = species, fill = island)) + 
  geom_bar(position = position_dodge2(preserve = "single", width = 0.9), width = 0.8) + 
  scale_fill_brewer(palette = "Set2")

```


# Step 4: Quantitative Data Analysis: Univariate Analysis

## Histogram

```{r}
ggplot(penguins, aes(x = body_mass_g)) + geom_histogram(col="white")

```

## Histogram

```{r}
ggplot(penguins, aes(x = flipper_length_mm)) + geom_histogram(col="white")

```

# Step 5: Quantitative Data Analysis: Bivariate Analysis

## Scatterplot

```{r}
ggplot(penguins, aes(x = flipper_length_mm, y=body_mass_g)) + geom_point()
```

## 

```{r, fig.height=10, fig.width=10}
# Load required libraries
library(ggplot2)
library(dplyr)

# Function to generate data with a specified correlation
generate_data <- function(r, n = 100) {
  set.seed(0)
  x <- runif(n)
  if (r == 1) {
    y <- x
  } else if (r == -1) {
    y <- -x
  } else if (r == 0) {
    y <- runif(n)
  } else {
    y <- r * x + sqrt(1 - r^2) * runif(n)
  }
  data.frame(x = x, y = y, r = as.factor(r))
}

# List of correlation coefficients to plot
correlation_coefficients <- c(1, -1, 0, 0.8, -0.8, 0.5, -0.5, 0.2, -0.2)

# Generate data for each correlation coefficient
data <- bind_rows(lapply(correlation_coefficients, generate_data))

# Plot using ggplot2
plot <- ggplot(data, aes(x = x, y = y)) +
  geom_point() +
  facet_wrap(~ r, scales = 'free') +
  labs(title = 'Scatter plots with different Pearson correlation coefficients',
       x = 'X', y = 'Y') +
  theme(aspect.ratio = 1)

# Display the plot
print(plot)

```

## Interpretations

```{r}
correlation_data <- data.frame(
  r_value = c("r = 1", "1 > r ≥ 0.8", "0.8 > r ≥ 0.4", "0.4 > r > 0", "r = 0", 
              "0 > r ≥ -0.4", "-0.4 > r ≥ -0.8", "-0.8 > r > -1", "r = -1"),
  interpretation = c("Perfect positive linear correlation", 
                     "Strong positive linear correlation", 
                     "Moderate positive linear correlation", 
                     "Weak positive linear correlation", 
                     "No correlation", 
                     "Weak negative linear correlation", 
                     "Moderate negative linear correlation", 
                     "Strong negative linear correlation", 
                     "Perfect negative linear correlation")
)

correlation_data |> knitr::kable()
```


##

![](images.png)

##

![](DataSaurus.gif)



# Step 6: Quantitative vs Qualitative

##

```{r}
ggplot(penguins, aes(x = flipper_length_mm, fill=species)) + geom_histogram(col="white") + facet_wrap(vars(species), ncol=1)
```

##

```{r}
ggplot(penguins, aes(x = body_mass_g, fill=species)) + geom_histogram(col="white") + facet_wrap(vars(species), ncol=1)
```

# Step 7: Qualitative and Two Quantitative

##

```{r}
ggplot(penguins, aes(x = flipper_length_mm, y=body_mass_g, col=species)) + geom_point()
```

# How to plot them? Use ggplot2 in R

## AI as a code assistant

Use ggplot2 to create a scatter plot of flipper_length_mm and body_mass_g in the dataset penguins. Write the R code.

# Basic Idea

##

```{r, echo=TRUE}
ggplot(data=penguins)
```

##

```{r, echo=TRUE}
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g))
```
##

```{r, echo=TRUE}
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) + geom_point()
```

##

```{r, echo=TRUE}
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) + geom_smooth(se=FALSE)
```

##

```{r, echo=TRUE}
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) + geom_smooth(se=FALSE) + geom_point()
```

##

```{r, echo=TRUE}
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) + geom_smooth(method="lm", se=FALSE)
```

##

```{r, echo=TRUE}
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g)) + geom_smooth(method="lm", se=FALSE) + geom_point()
```

##

```{r, echo=TRUE}
ggplot(data=penguins, aes(x=flipper_length_mm, y=body_mass_g, col=species)) + geom_smooth(method="lm", se=FALSE) + geom_point()
```